/* Autogenerated file. Do not edit manually. */

import { AccountInterface, shortString } from "starknet";
import { DojoProvider } from "@dojoengine/core";

export type IWorld = Awaited<ReturnType<typeof setupWorld>>;

export async function setupWorld(provider: DojoProvider) {
  function maker() {
    const contract_name = "maker";

    const create = async ({
      account,
      playerName,
    }: {
      account: AccountInterface;
      playerName: string;
    }) => {
      try {
        return await provider.execute(account, contract_name, "create", [
          provider.getWorldAddress(),
          playerName,
        ]);
      } catch (error) {
        console.error("Error executing spawn:", error);
        throw error;
      }
    };

    const subscribe = async ({ account }: { account: AccountInterface }) => {
      try {
        return await provider.execute(account, contract_name, "subscribe", [
          provider.getWorldAddress(),
        ]);
      } catch (error) {
        console.error("Error executing move:", error);
        throw error;
      }
    };

    const unsubscribe = async ({ account }: { account: AccountInterface }) => {
      try {
        return await provider.execute(account, contract_name, "unsubscribe", [
          provider.getWorldAddress(),
        ]);
      } catch (error) {
        console.error("Error executing move:", error);
        throw error;
      }
    };

    const fight = async ({ account }: { account: AccountInterface }) => {
      try {
        return await provider.execute(account, contract_name, "fight", [
          provider.getWorldAddress(),
        ]);
      } catch (error) {
        console.error("Error executing move:", error);
        throw error;
      }
    };

    return { create, subscribe, unsubscribe, fight };
  }
  return {
    maker: maker(),
  };
}
